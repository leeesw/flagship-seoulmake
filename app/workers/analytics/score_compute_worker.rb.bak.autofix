module Analytics\n  class ScoreComputeWorker\n    include Sidekiq::Worker\n    sidekiq_options queue: :analytics\n    def perform(post_id)\n      s7 = Ga4Score.for_post(post_id, 7)\n      s28 = Ga4Score.for_post(post_id, 28)\n      met = PostsMetric.find_by(post_id: post_id)\n      score = compute_score(s7, s28, met)\n      if s7\n        s7.update!(score: score, has_enough_data: !score.nil())\n      else\n        Ga4Score.create!(post_id: post_id, window: 7, score: nil, has_enough_data: false)\n      end\n      PostsOpsStep.upsert_step(post_id: post_id, step: 'score_compute', version: '1.3.1')\n    end\n    def compute_score(s7, s28, met)\n      return nil unless s7&.pv.to_i > 0\n      w_words = met&.words.to_i\n      base = 0.4 * s7.pv.to_f + 0.3 * s7.engagement_sec.to_f + 0.2 * s7.ctr.to_f + 0.1 * (s28&.trend.to_f)\n      adj  = (w_words < 400 ? -0.2 : 0.0)\n      (base / 100.0) + adj\n    end\n  end\nend\n\n